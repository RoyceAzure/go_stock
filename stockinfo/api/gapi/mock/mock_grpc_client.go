// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/RoyceAzure/go-stockinfo/api/gapi (interfaces: SchedulerClientFactory)

// Package mock_grpc_client is a generated GoMock package.
package mock_grpc_client

import (
	reflect "reflect"

	pb "github.com/RoyceAzure/go-stockinfo/api/pb"
	gomock "github.com/golang/mock/gomock"
)

// MockSchedulerClientFactory is a mock of SchedulerClientFactory interface.
type MockSchedulerClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockSchedulerClientFactoryMockRecorder
}

// MockSchedulerClientFactoryMockRecorder is the mock recorder for MockSchedulerClientFactory.
type MockSchedulerClientFactoryMockRecorder struct {
	mock *MockSchedulerClientFactory
}

// NewMockSchedulerClientFactory creates a new mock instance.
func NewMockSchedulerClientFactory(ctrl *gomock.Controller) *MockSchedulerClientFactory {
	mock := &MockSchedulerClientFactory{ctrl: ctrl}
	mock.recorder = &MockSchedulerClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSchedulerClientFactory) EXPECT() *MockSchedulerClientFactoryMockRecorder {
	return m.recorder
}

// NewClient mocks base method.
func (m *MockSchedulerClientFactory) NewClient() (pb.StockInfoSchdulerClient, func(), error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewClient")
	ret0, _ := ret[0].(pb.StockInfoSchdulerClient)
	ret1, _ := ret[1].(func())
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// NewClient indicates an expected call of NewClient.
func (mr *MockSchedulerClientFactoryMockRecorder) NewClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewClient", reflect.TypeOf((*MockSchedulerClientFactory)(nil).NewClient))
}
