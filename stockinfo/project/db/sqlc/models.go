// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Fund struct {
	FundID       int64          `json:"fund_id"`
	UserID       int64          `json:"user_id"`
	Balance      string         `json:"balance"`
	CurrencyType string         `json:"currency_type"`
	CrDate       time.Time      `json:"cr_date"`
	UpDate       sql.NullTime   `json:"up_date"`
	CrUser       string         `json:"cr_user"`
	UpUser       sql.NullString `json:"up_user"`
}

type Session struct {
	ID           uuid.UUID `json:"id"`
	UserID       int64     `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	CrDate       time.Time `json:"cr_date"`
	ExpiredAt    time.Time `json:"expired_at"`
}

type Stock struct {
	StockID      int64          `json:"stock_id"`
	StockCode    string         `json:"stock_code"`
	StockName    string         `json:"stock_name"`
	CurrentPrice string         `json:"current_price"`
	MarketCap    int64          `json:"market_cap"`
	CrDate       time.Time      `json:"cr_date"`
	UpDate       sql.NullTime   `json:"up_date"`
	CrUser       string         `json:"cr_user"`
	UpUser       sql.NullString `json:"up_user"`
}

type StockTransaction struct {
	TransationId            int64          `json:"TransationId"`
	UserID                  int64          `json:"user_id"`
	StockID                 int64          `json:"stock_id"`
	TransactionType         string         `json:"transaction_type"`
	TransactionDate         time.Time      `json:"transaction_date"`
	TransationAmt           int32          `json:"transation_amt"`
	TransationPricePerShare string         `json:"transation_price_per_share"`
	CrDate                  time.Time      `json:"cr_date"`
	UpDate                  sql.NullTime   `json:"up_date"`
	CrUser                  string         `json:"cr_user"`
	UpUser                  sql.NullString `json:"up_user"`
}

type User struct {
	UserID            int64          `json:"user_id"`
	UserName          string         `json:"user_name"`
	Email             string         `json:"email"`
	HashedPassword    string         `json:"hashed_password"`
	PasswordChangedAt time.Time      `json:"password_changed_at"`
	SsoIdentifer      sql.NullString `json:"sso_identifer"`
	CrDate            time.Time      `json:"cr_date"`
	UpDate            sql.NullTime   `json:"up_date"`
	CrUser            string         `json:"cr_user"`
	UpUser            sql.NullString `json:"up_user"`
	IsEmailVerified   bool           `json:"is_email_verified"`
}

type UserStock struct {
	UserStockID           int64          `json:"user_stock_id"`
	UserID                int64          `json:"user_id"`
	StockID               int64          `json:"stock_id"`
	Quantity              int32          `json:"quantity"`
	PurchasePricePerShare string         `json:"purchase_price_per_share"`
	PurchasedDate         time.Time      `json:"purchased_date"`
	CrDate                time.Time      `json:"cr_date"`
	UpDate                sql.NullTime   `json:"up_date"`
	CrUser                string         `json:"cr_user"`
	UpUser                sql.NullString `json:"up_user"`
}

type VerifyEmail struct {
	ID         int64     `json:"id"`
	UserID     int64     `json:"user_id"`
	Email      string    `json:"email"`
	SecretCode string    `json:"secret_code"`
	IsUsed     bool      `json:"is_used"`
	CrDate     time.Time `json:"cr_date"`
	ExpiredAt  time.Time `json:"expired_at"`
}
