syntax = "proto3";

import "rpc_create_user.proto";
import "rpc_stock_transation.proto";
import "rpc_user_stock.proto";
import "rpc_get_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_verify_email.proto";
import "rpc_stock.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "rpc_fund.proto";
package pb;

option go_package = "github.com/RoyceAzure/go-stockinfo/api/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "stcok Info API";
      version: "1.3";
      contact: {
        name: "stcok_info project";
        url: "https://github.com/RoyceAzure/go_stock";
        email: "roycewnag@gmail.com";
      };
    };
};
    
service StockInfo{
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
            };
            option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
              description: "Use this API to create new user";
              summary: "Create new user";
            };
    }
    rpc GetUser (GetUserRequest) returns (GetUserResponse){
      option (google.api.http) = {
          get: "/v1/user"
          };
          option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create new user";
            summary: "Create new user";
          };
  }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
      option (google.api.http) = {
          patch: "/v1/update_user"
          body: "*"
          };
          option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update new user";
            summary: "Update new user";
          };
  }
    rpc LoginUser (loginUserRequest) returns (loginUserResponse){
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
            };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
          description: "Use this API to login user to get access token and refresh token";
          summary: "login a user";
        };
    }

    rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse){
      option (google.api.http) = {
          get: "/v1/verify_email"
          };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to verify email address";
        summary: "Verify email";
      };
  }

  rpc InitStock (InitStockRequest) returns (InitStockResponse){
    option (google.api.http) = {
        get: "/v1/stock/init"
        };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to Init stock data";
      summary: "Init stock data";
    };
}

rpc GetUnRealizedGain (GetUnRealizedGainRequest) returns (GetUnRealizedGainResponse){
  option (google.api.http) = {
      get: "/v1/fund/unrealized"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to get unrealized fund";
    summary: "Get unrealized fund";
  };
}

rpc GetRealizedGain (GetRealizedGainRequest) returns (GetRealizedGainResponse){
  option (google.api.http) = {
      get: "/v1/fund/realized"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to get realized fund";
    summary: "Get realized fund";
  };
}

rpc GetFund (GetFundRequest) returns (GetFundResponse){
  option (google.api.http) = {
      get: "/v1/fund"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to get fund";
    summary: "Get fund";
  };
}

rpc AddFund (AddFundRequest) returns (AddFundResponse){
  option (google.api.http) = {
      post: "/v1/fund"
      body:"*"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to charge ";
    summary: "Charge fund";
  };
}

rpc GetStock (GetStockRequest) returns (GetStockResponse){
  option (google.api.http) = {
      get: "/v1/stock/{stock_code}"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to get stock by code";
    summary: "Get stock by code";
  };
}

rpc GetStocks (GetStocksRequest) returns (GetStocksResponse){
  option (google.api.http) = {
      get: "/v1/stock"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to get stocks";
    summary: "Get stocks";
  };
}

rpc TransationStock (TransationRequest) returns (TransationResponse){
  option (google.api.http) = {
      post: "/v1/stockTransation"
      body:"*"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to perform transation";
    summary: "Perform transation";
  };
}

rpc GetAllTransations (GetAllStockTransationRequest) returns (StockTransatsionResponse){
  option (google.api.http) = {
      get: "/v1/stockTransation"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to get filter transations";
    summary: "Get filter transations";
  };
}

rpc GetUserStock (GetUserStockRequest) returns (GetUserStockResponse){
  option (google.api.http) = {
      get: "/v1/userStock"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to stock inventory ";
    summary: "Get stock inventory";
  };
}

rpc GetUserStockById (GetUserStockByIdRequest) returns (GetUserStockBuIdResponse){
  option (google.api.http) = {
      get: "/v1/userStock/{user_id}"
      };
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
    description: "Use this API to stock inventory by user id";
    summary: "Get stock inventory by user id";
  };
}

}
