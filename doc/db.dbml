// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Project stockinfo{
    database_type: 'PostgresSQL'
    Note: '''
        # Stock info
    '''
}


Table users as U{
  user_id bigserial [pk]
  user_name varchar [not null]
  email varchar [unique, not null]
  hashed_password varchar [not null]
  password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  sso_identifer varchar [null]
  cr_date timestamptz  [not null, default: `now()`]
  up_date timestamptz
  cr_user varchar [not null]
  up_user varchar
  Indexes{
    user_id
  }
}

Table funds{
  fund_id bigserial [pk, increment]
  user_id bigint [ref: > U.user_id, not null]
  balance decimal [not null]
  currency_type  varchar [not null]
  cr_date timestamptz  [not null, default: `now()`]
  up_date timestamptz
  cr_user varchar [not null]
  up_user varchar
  Indexes{
    fund_id
    user_id
    (user_id, currency_type) [unique]
  }
}

Table stocks{
  stock_id bigserial [pk, increment]
  ticker_symbol varchar [not null]
  comp_name varchar [not null]
  current_price decimal [not null]
  market_cap bigint [not null] //Market Capitalization，市值
  cr_date timestamptz  [not null, default: `now()`]
  up_date timestamptz
  cr_user varchar [not null]
  up_user varchar
  Indexes{
    stock_id
  }
}

Table user_stocks{
  user_stock_id bigserial [pk, increment]
  user_id bigint
  stock_id bigint
  quantity int [default: 1]
  purchase_price_per_share decimal //購買時每股價格
  purchased_date timestamp
  cr_date timestamptz  [not null, default: `now()`]
  up_date timestamptz
  cr_user varchar [not null]
  up_user varchar


  Indexes{
    user_stock_id
    user_id
    stock_id
  }
}

Table stock_transactions{
  TransationId bigserial [pk, increment]
  user_id bigint
  stock_id bigint
  transaction_type varchar
  transaction_date timestamp [default: `now()`]
  transation_amt decimal
  transation_proce_per_share decimal
  cr_date timestamptz  [not null, default: `now()`]
  up_date timestamptz
  cr_user varchar [not null]
  up_user varchar


  Indexes{
    TransationId
    (user_id, stock_id)
  }
}

Ref: user_stocks.user_id > users.user_id 
Ref: stock_transactions.user_id > users.user_id
Ref: user_stocks.stock_id > stocks.stock_id 
Ref: stock_transactions.stock_id > stocks.stock_id 
