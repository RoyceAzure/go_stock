{
  "swagger": "2.0",
  "info": {
    "title": "stcok Info API",
    "version": "1.3",
    "contact": {
      "name": "stcok_info project",
      "url": "https://github.com/RoyceAzure/go_stock",
      "email": "roycewnag@gmail.com"
    }
  },
  "tags": [
    {
      "name": "StockInfo"
    },
    {
      "name": "StockInfoDistributor"
    },
    {
      "name": "StockInfoSchduler"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/client_register": {
      "delete": {
        "summary": "Delete client register",
        "description": "Use this API to delete client register",
        "operationId": "StockInfoDistributor_DeleteClientRegister",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteClientRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stockCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StockInfoDistributor"
        ]
      },
      "post": {
        "summary": "Create client register",
        "description": "Use this API to create client register",
        "operationId": "StockInfoDistributor_CreateClientRegister",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateClientRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateClientRegisterRequest"
            }
          }
        ],
        "tags": [
          "StockInfoDistributor"
        ]
      }
    },
    "/v1/client_register/{clientId}": {
      "get": {
        "summary": "get client register by id",
        "description": "Use this API to get client register by id",
        "operationId": "StockInfoDistributor_GetClientRegisterByClientUID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetClientRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StockInfoDistributor"
        ]
      }
    },
    "/v1/email/verify": {
      "get": {
        "summary": "Verify email",
        "description": "Use this API to verify email address",
        "operationId": "StockInfo_VerifyEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "emailId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "secretCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/frontend_client": {
      "post": {
        "summary": "create frontend client",
        "description": "Use this API to create frontend client",
        "operationId": "StockInfoDistributor_CreateFrontendClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateFrontendClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateFrontendClientRequest"
            }
          }
        ],
        "tags": [
          "StockInfoDistributor"
        ]
      }
    },
    "/v1/frontend_client/ip": {
      "get": {
        "summary": "get frontend client",
        "description": "Use this API to  get frontend client",
        "operationId": "StockInfoDistributor_GetFrontendClientByIP",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetFrontendClientByIPResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfoDistributor"
        ]
      }
    },
    "/v1/frontend_client/{clientId}": {
      "delete": {
        "summary": "delete frontend client",
        "description": "Use this API to delete frontend client",
        "operationId": "StockInfoDistributor_DeleteFrontendClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteFrontendClientResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StockInfoDistributor"
        ]
      }
    },
    "/v1/fund": {
      "get": {
        "summary": "Get fund",
        "description": "Use this API to get fund",
        "operationId": "StockInfo_GetFund",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetFundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfo"
        ]
      },
      "post": {
        "summary": "Charge fund",
        "description": "Use this API to charge ",
        "operationId": "StockInfo_AddFund",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAddFundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbAddFundRequest"
            }
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/realized": {
      "get": {
        "summary": "Get realized fund",
        "description": "Use this API to get realized fund",
        "operationId": "StockInfo_GetRealizedGain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetRealizedGainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/realizedProfit": {
      "get": {
        "summary": "Get realozedProfit",
        "description": "Use this API to get realozedProfit",
        "operationId": "StockInfo_GetRealizedProfitLoss",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetRealizedProfitLossResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/stock": {
      "get": {
        "summary": "Get stocks",
        "description": "Use this API to get stocks",
        "operationId": "StockInfo_GetStocks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetStocksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/stock/action/init": {
      "get": {
        "summary": "Init stock data",
        "description": "Use this API to Init stock data",
        "operationId": "StockInfo_InitStock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbInitStockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/stock/{stockCode}": {
      "get": {
        "summary": "Get stock by code",
        "description": "Use this API to get stock by code",
        "operationId": "StockInfo_GetStock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetStockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "stockCode",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/stockTransation": {
      "get": {
        "summary": "Get filter transations",
        "description": "Use this API to get filter transations",
        "operationId": "StockInfo_GetAllTransations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbStockTransatsionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "stockId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "transationType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "StockInfo"
        ]
      },
      "post": {
        "summary": "Perform transation",
        "description": "Use this API to perform transation",
        "operationId": "StockInfo_TransationStock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbTransationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbTransationRequest"
            }
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/stock_day_avg": {
      "get": {
        "summary": "Get stock_day_avg",
        "description": "Use this API to get stock_day_avg",
        "operationId": "StockInfoSchduler_GetStockDayAvg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbStockDayAvgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfoSchduler"
        ]
      }
    },
    "/v1/stock_day_real_price/latest": {
      "get": {
        "summary": "Get latest stock_day_real_price",
        "description": "Use this API to get latest stock_day_real_price",
        "operationId": "StockInfoSchduler_GetStockPriceRealTime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbStockPriceRealTimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfoSchduler"
        ]
      }
    },
    "/v1/token/renew": {
      "post": {
        "summary": "Renew access token",
        "description": "Use this API to renew access token",
        "operationId": "StockInfo_RenewToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRenewTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbRenewTokenRequest"
            }
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/token/validate": {
      "post": {
        "summary": "Validate access token",
        "description": "Use this API to validate access token",
        "operationId": "StockInfo_ValidateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbValidateTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbValidateTokenRequest"
            }
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/unRealizedProfit": {
      "get": {
        "summary": "Get UnRealozedProfit",
        "description": "Use this API to get UnRealozedProfit",
        "operationId": "StockInfo_GetUnRealizedProfitLoss",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUnRealizedProfitLossResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/unrealized": {
      "get": {
        "summary": "Get unrealized fund",
        "description": "Use this API to get unrealized fund",
        "operationId": "StockInfo_GetUnRealizedGain",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUnRealizedGainResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/user": {
      "get": {
        "summary": "Create new user",
        "description": "Use this API to create new user",
        "operationId": "StockInfo_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StockInfo"
        ]
      },
      "post": {
        "summary": "Create new user",
        "description": "Use this API to create new user",
        "operationId": "StockInfo_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateUserRequest"
            }
          }
        ],
        "tags": [
          "StockInfo"
        ]
      },
      "patch": {
        "summary": "Update new user",
        "description": "Use this API to update new user",
        "operationId": "StockInfo_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/user/login": {
      "post": {
        "summary": "login a user",
        "description": "Use this API to login user to get access token and refresh token",
        "operationId": "StockInfo_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbloginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbloginUserRequest"
            }
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/userStock": {
      "get": {
        "summary": "Get stock inventory",
        "description": "Use this API to stock inventory ",
        "operationId": "StockInfo_GetUserStock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserStockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    },
    "/v1/userStock/{userId}": {
      "get": {
        "summary": "Get stock inventory by user id",
        "description": "Use this API to stock inventory by user id",
        "operationId": "StockInfo_GetUserStockById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserStockBuIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "StockInfo"
        ]
      }
    }
  },
  "definitions": {
    "pbAddFundRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "currencyType": {
          "type": "string"
        }
      }
    },
    "pbAddFundResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbFund"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "pbClientRegister": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "stockCode": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "date-time"
        },
        "updateAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbCreateClientRegisterRequest": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "stockCode": {
          "type": "string"
        }
      }
    },
    "pbCreateClientRegisterResponse": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "stockCode": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbCreateFrontendClientRequest": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string"
        }
      }
    },
    "pbCreateFrontendClientResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbFrontendClient"
        }
      }
    },
    "pbCreateUserRequest": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "ssoIdentifer": {
          "type": "string"
        }
      }
    },
    "pbCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbDeleteClientRegisterResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "pbDeleteFrontendClientResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "pbFrontendClient": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "createAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbFund": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "balance": {
          "type": "string"
        },
        "currencyType": {
          "type": "string"
        },
        "ssoIdentifer": {
          "type": "string"
        },
        "upDate": {
          "type": "string",
          "format": "date-time"
        },
        "crDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbGetClientRegisterResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbClientRegister"
          }
        }
      }
    },
    "pbGetFrontendClientByIPResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbFrontendClient"
        }
      }
    },
    "pbGetFundResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbFund"
          }
        }
      }
    },
    "pbGetRealizedGainResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRealizedGain"
          }
        }
      }
    },
    "pbGetRealizedProfitLossResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRealizedProfitLoss"
          }
        }
      }
    },
    "pbGetStockResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/pbStock"
        }
      }
    },
    "pbGetStocksResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbStock"
          }
        }
      }
    },
    "pbGetUnRealizedGainResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRealizedGain"
          }
        }
      }
    },
    "pbGetUnRealizedProfitLossResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRealizedProfitLoss"
          }
        }
      }
    },
    "pbGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbGetUserStockBuIdResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUserStock"
          }
        }
      }
    },
    "pbGetUserStockResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbGetUserStockResponseDTO"
          }
        }
      }
    },
    "pbGetUserStockResponseDTO": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "stockId": {
          "type": "string",
          "format": "int64"
        },
        "stockCode": {
          "type": "string"
        },
        "stockName": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "purchasePricePerShare": {
          "type": "string"
        }
      }
    },
    "pbGetransationsResponse": {
      "type": "object",
      "properties": {
        "transationId": {
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "stockId": {
          "type": "string",
          "format": "int64"
        },
        "stockCode": {
          "type": "string"
        },
        "stockName": {
          "type": "string"
        },
        "transationType": {
          "type": "string"
        },
        "transAmt": {
          "type": "string",
          "format": "int64"
        },
        "transPricesPerShare": {
          "type": "string"
        },
        "result": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "pbInitStockResponse": {
      "type": "object",
      "properties": {
        "successCount": {
          "type": "string",
          "format": "int64"
        },
        "failedCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "pbRealizedGain": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64"
        },
        "avgCost": {
          "type": "string"
        },
        "cost": {
          "type": "string"
        },
        "currentPrice": {
          "type": "string"
        },
        "currentValue": {
          "type": "string"
        },
        "gain": {
          "type": "string"
        },
        "gainPt": {
          "type": "string"
        }
      }
    },
    "pbRealizedProfitLoss": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "costPerPrice": {
          "type": "string"
        },
        "costTotalPrice": {
          "type": "string"
        },
        "amt": {
          "type": "string"
        },
        "currentPrice": {
          "type": "string"
        },
        "dealPerPrice": {
          "type": "string"
        },
        "dealTotalPrice": {
          "type": "string"
        },
        "realized": {
          "type": "string"
        },
        "realizedPrecent": {
          "type": "string"
        },
        "transAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbRenewTokenRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "pbRenewTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "expiredAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbStock": {
      "type": "object",
      "properties": {
        "stockCode": {
          "type": "string"
        },
        "stockName": {
          "type": "string"
        },
        "currentPrice": {
          "type": "string"
        }
      }
    },
    "pbStockDayAvg": {
      "type": "object",
      "properties": {
        "stockCode": {
          "type": "string"
        },
        "stockName": {
          "type": "string"
        },
        "closePrice": {
          "type": "string"
        },
        "monthlyAvg": {
          "type": "string"
        },
        "upDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbStockDayAvgResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbStockDayAvg"
          }
        }
      }
    },
    "pbStockPriceRealTime": {
      "type": "object",
      "properties": {
        "stockCode": {
          "type": "string"
        },
        "stockName": {
          "type": "string"
        },
        "tradeVolume": {
          "type": "string"
        },
        "tradeValue": {
          "type": "string"
        },
        "openPrice": {
          "type": "string"
        },
        "highestPrice": {
          "type": "string"
        },
        "lowestPrice": {
          "type": "string"
        },
        "closePrice": {
          "type": "string"
        },
        "change": {
          "type": "string"
        },
        "transaction": {
          "type": "string"
        },
        "transTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbStockPriceRealTimeResponse": {
      "type": "object",
      "properties": {
        "keyTime": {
          "type": "string"
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbStockPriceRealTime"
          }
        }
      }
    },
    "pbStockTransatsionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbGetransationsResponse"
          }
        }
      }
    },
    "pbTransationRequest": {
      "type": "object",
      "properties": {
        "stockCode": {
          "type": "string"
        },
        "transationType": {
          "type": "string"
        },
        "transAmt": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbTransationResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "string"
        }
      }
    },
    "pbUpdateUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "ssoIdentifer": {
          "type": "string"
        }
      }
    },
    "pbUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "userName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "ssoIdentifer": {
          "type": "string"
        },
        "passwordChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "crDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbUserStock": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "format": "int64"
        },
        "stockId": {
          "type": "string",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "purchasePricePerShare": {
          "type": "string"
        }
      }
    },
    "pbValidateTokenRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "pbValidateTokenResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        }
      }
    },
    "pbVerifyEmailResponse": {
      "type": "object",
      "properties": {
        "isVerified": {
          "type": "boolean"
        }
      }
    },
    "pbloginUserRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbloginUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "sessionId": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        },
        "accessTokenExpiredAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshTokenExpiredAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
