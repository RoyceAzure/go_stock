version: '3.9'
services:

  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=royce
      - POSTGRES_PASSWORD=royce
      - POSTGRES_DB=stock_info
    ports:
      - "5432:5432"
    volumes:
      - ps_data-volume:/var/lib/postgresql/data

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-volume:/data/db

  redis-asynq:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  redis-scheduler:
    image: redis:7-alpine
    ports:
      - "6380:6379"

  asynqmon:
    image: hibiken/asynqmon
    ports:
      - "8081:8080"
    command: ["--redis-addr=redis-asynq:6379"]
    depends_on:
      - redis-asynq

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - DB_SOURCE=postgres://royce:royce@postgres:5432/stock_info?sslmode=disable
      - REDIS_ADDRESS=redis:6379
    depends_on:
      - postgres
      - redis-asynq
    entrypoint: ["/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh"]
    command: ["/app/main"]

  scheduler:
    build:
      context: ./scheduler
      dockerfile: Dockerfile.scheduler
    ports:
      - "8082:8082"
      - "9091:9091"
    environment:
      - DB_SOURCE=postgres://royce:royce@postgres:5432/stock_info_scheduler?sslmode=disable
      - REDIS_SCHDULER_ADDRESS=redis-scheduler:6379
      - REDIS_Q_ADDRESS=redis-asynq:6379
      - SERVICEID=schduler01
    depends_on:
      - postgres
      - redis-scheduler
      - logger
    command: ["/app/main"]

  distributor:
    build:
      context: ./distributor
      dockerfile: Dockerfile.distributor
    ports:
      - "8083:8083"
    environment:
      - DB_SOURCE=postgres://royce:royce@postgres:5432/stock_info_distributor?sslmode=disable
      - GRPC_SCHEDULER_ADDRESS=scheduler:9091
      - KAFKA_DISTRIBUTOR_ADDRESS=kafka:9092
      - REDIS_Q_ADDRESS=redis-asynq:6379
      - SERVICEID=distributor01
    depends_on:
      - scheduler
      - kafka
      - logger
    command: ["/app/main"]

  logger:
    build:
      context: ./logger
      dockerfile: Dockerfile.logger
    environment:
      - MONGODB_ADDRESS=mongodb://mongo:27017
      - REDIS_Q_ADDRESS=redis-asynq:6379
      - SERVICEID=logger01
    depends_on:
      - mongo
      - redis-asynq
    command: ["/app/main"]

  kafka:
    image: confluentinc/cp-kafka:6.0.14
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8085:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.14
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
volumes:
  ps_data-volume:
  mongo-volume: