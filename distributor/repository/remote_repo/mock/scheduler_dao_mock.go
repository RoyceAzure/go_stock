// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/RoyceAzure/go-stockinfo-distributor/repository/remote_repo (interfaces: SchdulerInfoDao)

// Package mock_remote_repo is a generated GoMock package.
package mock_remote_repo

import (
	context "context"
	reflect "reflect"

	repository "github.com/RoyceAzure/go-stockinfo-distributor/repository/remote_repo"
	gomock "github.com/golang/mock/gomock"
)

// MockSchdulerInfoDao is a mock of SchdulerInfoDao interface.
type MockSchdulerInfoDao struct {
	ctrl     *gomock.Controller
	recorder *MockSchdulerInfoDaoMockRecorder
}

// MockSchdulerInfoDaoMockRecorder is the mock recorder for MockSchdulerInfoDao.
type MockSchdulerInfoDaoMockRecorder struct {
	mock *MockSchdulerInfoDao
}

// NewMockSchdulerInfoDao creates a new mock instance.
func NewMockSchdulerInfoDao(ctrl *gomock.Controller) *MockSchdulerInfoDao {
	mock := &MockSchdulerInfoDao{ctrl: ctrl}
	mock.recorder = &MockSchdulerInfoDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSchdulerInfoDao) EXPECT() *MockSchdulerInfoDaoMockRecorder {
	return m.recorder
}

// GetSprData mocks base method.
func (m *MockSchdulerInfoDao) GetSprData(arg0 context.Context) repository.SprData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSprData", arg0)
	ret0, _ := ret[0].(repository.SprData)
	return ret0
}

// GetSprData indicates an expected call of GetSprData.
func (mr *MockSchdulerInfoDaoMockRecorder) GetSprData(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSprData", reflect.TypeOf((*MockSchdulerInfoDao)(nil).GetSprData), arg0)
}

// GetStockPriceRealTime mocks base method.
func (m *MockSchdulerInfoDao) GetStockPriceRealTime(arg0 context.Context) (repository.SprData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStockPriceRealTime", arg0)
	ret0, _ := ret[0].(repository.SprData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStockPriceRealTime indicates an expected call of GetStockPriceRealTime.
func (mr *MockSchdulerInfoDaoMockRecorder) GetStockPriceRealTime(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStockPriceRealTime", reflect.TypeOf((*MockSchdulerInfoDao)(nil).GetStockPriceRealTime), arg0)
}

// SetSprData mocks base method.
func (m *MockSchdulerInfoDao) SetSprData(arg0 context.Context, arg1 repository.SprData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetSprData", arg0, arg1)
}

// SetSprData indicates an expected call of SetSprData.
func (mr *MockSchdulerInfoDaoMockRecorder) SetSprData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetSprData", reflect.TypeOf((*MockSchdulerInfoDao)(nil).SetSprData), arg0, arg1)
}
